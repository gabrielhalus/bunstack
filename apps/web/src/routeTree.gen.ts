/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticationRouteImport } from './routes/_authentication/route'
import { Route as AuthenticationRegisterImport } from './routes/_authentication/register'
import { Route as AuthenticationLoginImport } from './routes/_authentication/login'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/_dashboard/route'
import { Route as AuthenticatedDashboardIndexImport } from './routes/_authenticated/_dashboard/index'
import { Route as AuthenticatedDashboardProfileImport } from './routes/_authenticated/_dashboard/profile'
import { Route as AuthenticatedDashboardUsersRouteImport } from './routes/_authenticated/_dashboard/users/route'
import { Route as AuthenticatedDashboardUsersIndexImport } from './routes/_authenticated/_dashboard/users/index'
import { Route as AuthenticatedDashboardSettingsIndexImport } from './routes/_authenticated/_dashboard/settings/index'
import { Route as AuthenticatedDashboardSettingsRolesImport } from './routes/_authenticated/_dashboard/settings/roles'

// Create/Update Routes

const AuthenticationRouteRoute = AuthenticationRouteImport.update({
  id: '/_authentication',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticationRegisterRoute = AuthenticationRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthenticationRouteRoute,
} as any)

const AuthenticationLoginRoute = AuthenticationLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthenticationRouteRoute,
} as any)

const AuthenticatedDashboardRouteRoute =
  AuthenticatedDashboardRouteImport.update({
    id: '/_authenticated/_dashboard',
    getParentRoute: () => rootRoute,
  } as any)

const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)

const AuthenticatedDashboardProfileRoute =
  AuthenticatedDashboardProfileImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)

const AuthenticatedDashboardUsersRouteRoute =
  AuthenticatedDashboardUsersRouteImport.update({
    id: '/users',
    path: '/users',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)

const AuthenticatedDashboardUsersIndexRoute =
  AuthenticatedDashboardUsersIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedDashboardUsersRouteRoute,
  } as any)

const AuthenticatedDashboardSettingsIndexRoute =
  AuthenticatedDashboardSettingsIndexImport.update({
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)

const AuthenticatedDashboardSettingsRolesRoute =
  AuthenticatedDashboardSettingsRolesImport.update({
    id: '/settings/roles',
    path: '/settings/roles',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authentication': {
      id: '/_authentication'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticationRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/_dashboard': {
      id: '/_authenticated/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authentication/login': {
      id: '/_authentication/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthenticationLoginImport
      parentRoute: typeof AuthenticationRouteImport
    }
    '/_authentication/register': {
      id: '/_authentication/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthenticationRegisterImport
      parentRoute: typeof AuthenticationRouteImport
    }
    '/_authenticated/_dashboard/users': {
      id: '/_authenticated/_dashboard/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedDashboardUsersRouteImport
      parentRoute: typeof AuthenticatedDashboardRouteImport
    }
    '/_authenticated/_dashboard/profile': {
      id: '/_authenticated/_dashboard/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedDashboardProfileImport
      parentRoute: typeof AuthenticatedDashboardRouteImport
    }
    '/_authenticated/_dashboard/': {
      id: '/_authenticated/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedDashboardIndexImport
      parentRoute: typeof AuthenticatedDashboardRouteImport
    }
    '/_authenticated/_dashboard/settings/roles': {
      id: '/_authenticated/_dashboard/settings/roles'
      path: '/settings/roles'
      fullPath: '/settings/roles'
      preLoaderRoute: typeof AuthenticatedDashboardSettingsRolesImport
      parentRoute: typeof AuthenticatedDashboardRouteImport
    }
    '/_authenticated/_dashboard/settings/': {
      id: '/_authenticated/_dashboard/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedDashboardSettingsIndexImport
      parentRoute: typeof AuthenticatedDashboardRouteImport
    }
    '/_authenticated/_dashboard/users/': {
      id: '/_authenticated/_dashboard/users/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof AuthenticatedDashboardUsersIndexImport
      parentRoute: typeof AuthenticatedDashboardUsersRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticationRouteRouteChildren {
  AuthenticationLoginRoute: typeof AuthenticationLoginRoute
  AuthenticationRegisterRoute: typeof AuthenticationRegisterRoute
}

const AuthenticationRouteRouteChildren: AuthenticationRouteRouteChildren = {
  AuthenticationLoginRoute: AuthenticationLoginRoute,
  AuthenticationRegisterRoute: AuthenticationRegisterRoute,
}

const AuthenticationRouteRouteWithChildren =
  AuthenticationRouteRoute._addFileChildren(AuthenticationRouteRouteChildren)

interface AuthenticatedDashboardUsersRouteRouteChildren {
  AuthenticatedDashboardUsersIndexRoute: typeof AuthenticatedDashboardUsersIndexRoute
}

const AuthenticatedDashboardUsersRouteRouteChildren: AuthenticatedDashboardUsersRouteRouteChildren =
  {
    AuthenticatedDashboardUsersIndexRoute:
      AuthenticatedDashboardUsersIndexRoute,
  }

const AuthenticatedDashboardUsersRouteRouteWithChildren =
  AuthenticatedDashboardUsersRouteRoute._addFileChildren(
    AuthenticatedDashboardUsersRouteRouteChildren,
  )

interface AuthenticatedDashboardRouteRouteChildren {
  AuthenticatedDashboardUsersRouteRoute: typeof AuthenticatedDashboardUsersRouteRouteWithChildren
  AuthenticatedDashboardProfileRoute: typeof AuthenticatedDashboardProfileRoute
  AuthenticatedDashboardIndexRoute: typeof AuthenticatedDashboardIndexRoute
  AuthenticatedDashboardSettingsRolesRoute: typeof AuthenticatedDashboardSettingsRolesRoute
  AuthenticatedDashboardSettingsIndexRoute: typeof AuthenticatedDashboardSettingsIndexRoute
}

const AuthenticatedDashboardRouteRouteChildren: AuthenticatedDashboardRouteRouteChildren =
  {
    AuthenticatedDashboardUsersRouteRoute:
      AuthenticatedDashboardUsersRouteRouteWithChildren,
    AuthenticatedDashboardProfileRoute: AuthenticatedDashboardProfileRoute,
    AuthenticatedDashboardIndexRoute: AuthenticatedDashboardIndexRoute,
    AuthenticatedDashboardSettingsRolesRoute:
      AuthenticatedDashboardSettingsRolesRoute,
    AuthenticatedDashboardSettingsIndexRoute:
      AuthenticatedDashboardSettingsIndexRoute,
  }

const AuthenticatedDashboardRouteRouteWithChildren =
  AuthenticatedDashboardRouteRoute._addFileChildren(
    AuthenticatedDashboardRouteRouteChildren,
  )

export interface FileRoutesByFullPath {
  '': typeof AuthenticatedDashboardRouteRouteWithChildren
  '/login': typeof AuthenticationLoginRoute
  '/register': typeof AuthenticationRegisterRoute
  '/users': typeof AuthenticatedDashboardUsersRouteRouteWithChildren
  '/profile': typeof AuthenticatedDashboardProfileRoute
  '/': typeof AuthenticatedDashboardIndexRoute
  '/settings/roles': typeof AuthenticatedDashboardSettingsRolesRoute
  '/settings': typeof AuthenticatedDashboardSettingsIndexRoute
  '/users/': typeof AuthenticatedDashboardUsersIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthenticationRouteRouteWithChildren
  '/login': typeof AuthenticationLoginRoute
  '/register': typeof AuthenticationRegisterRoute
  '/profile': typeof AuthenticatedDashboardProfileRoute
  '/': typeof AuthenticatedDashboardIndexRoute
  '/settings/roles': typeof AuthenticatedDashboardSettingsRolesRoute
  '/settings': typeof AuthenticatedDashboardSettingsIndexRoute
  '/users': typeof AuthenticatedDashboardUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authentication': typeof AuthenticationRouteRouteWithChildren
  '/_authenticated/_dashboard': typeof AuthenticatedDashboardRouteRouteWithChildren
  '/_authentication/login': typeof AuthenticationLoginRoute
  '/_authentication/register': typeof AuthenticationRegisterRoute
  '/_authenticated/_dashboard/users': typeof AuthenticatedDashboardUsersRouteRouteWithChildren
  '/_authenticated/_dashboard/profile': typeof AuthenticatedDashboardProfileRoute
  '/_authenticated/_dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/_authenticated/_dashboard/settings/roles': typeof AuthenticatedDashboardSettingsRolesRoute
  '/_authenticated/_dashboard/settings/': typeof AuthenticatedDashboardSettingsIndexRoute
  '/_authenticated/_dashboard/users/': typeof AuthenticatedDashboardUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/register'
    | '/users'
    | '/profile'
    | '/'
    | '/settings/roles'
    | '/settings'
    | '/users/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/register'
    | '/profile'
    | '/'
    | '/settings/roles'
    | '/settings'
    | '/users'
  id:
    | '__root__'
    | '/_authentication'
    | '/_authenticated/_dashboard'
    | '/_authentication/login'
    | '/_authentication/register'
    | '/_authenticated/_dashboard/users'
    | '/_authenticated/_dashboard/profile'
    | '/_authenticated/_dashboard/'
    | '/_authenticated/_dashboard/settings/roles'
    | '/_authenticated/_dashboard/settings/'
    | '/_authenticated/_dashboard/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticationRouteRoute: typeof AuthenticationRouteRouteWithChildren
  AuthenticatedDashboardRouteRoute: typeof AuthenticatedDashboardRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticationRouteRoute: AuthenticationRouteRouteWithChildren,
  AuthenticatedDashboardRouteRoute:
    AuthenticatedDashboardRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authentication",
        "/_authenticated/_dashboard"
      ]
    },
    "/_authentication": {
      "filePath": "_authentication/route.tsx",
      "children": [
        "/_authentication/login",
        "/_authentication/register"
      ]
    },
    "/_authenticated/_dashboard": {
      "filePath": "_authenticated/_dashboard/route.tsx",
      "children": [
        "/_authenticated/_dashboard/users",
        "/_authenticated/_dashboard/profile",
        "/_authenticated/_dashboard/",
        "/_authenticated/_dashboard/settings/roles",
        "/_authenticated/_dashboard/settings/"
      ]
    },
    "/_authentication/login": {
      "filePath": "_authentication/login.tsx",
      "parent": "/_authentication"
    },
    "/_authentication/register": {
      "filePath": "_authentication/register.tsx",
      "parent": "/_authentication"
    },
    "/_authenticated/_dashboard/users": {
      "filePath": "_authenticated/_dashboard/users/route.tsx",
      "parent": "/_authenticated/_dashboard",
      "children": [
        "/_authenticated/_dashboard/users/"
      ]
    },
    "/_authenticated/_dashboard/profile": {
      "filePath": "_authenticated/_dashboard/profile.tsx",
      "parent": "/_authenticated/_dashboard"
    },
    "/_authenticated/_dashboard/": {
      "filePath": "_authenticated/_dashboard/index.tsx",
      "parent": "/_authenticated/_dashboard"
    },
    "/_authenticated/_dashboard/settings/roles": {
      "filePath": "_authenticated/_dashboard/settings/roles.tsx",
      "parent": "/_authenticated/_dashboard"
    },
    "/_authenticated/_dashboard/settings/": {
      "filePath": "_authenticated/_dashboard/settings/index.tsx",
      "parent": "/_authenticated/_dashboard"
    },
    "/_authenticated/_dashboard/users/": {
      "filePath": "_authenticated/_dashboard/users/index.tsx",
      "parent": "/_authenticated/_dashboard/users"
    }
  }
}
ROUTE_MANIFEST_END */
