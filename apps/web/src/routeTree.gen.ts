/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticationRouteRouteImport } from './routes/_authentication/route'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedDashboardRouteRouteImport } from './routes/_authenticated/_dashboard/route'
import { Route as AuthenticationRegisterIndexRouteImport } from './routes/_authentication/register/index'
import { Route as AuthenticationLoginIndexRouteImport } from './routes/_authentication/login/index'
import { Route as AuthenticatedDashboardIndexRouteImport } from './routes/_authenticated/_dashboard/index'
import { Route as AuthenticatedDashboardProfileRouteImport } from './routes/_authenticated/_dashboard/profile'
import { Route as AuthenticatedDashboardUsersRouteRouteImport } from './routes/_authenticated/_dashboard/users/route'
import { Route as AuthenticatedDashboardRolesRouteRouteImport } from './routes/_authenticated/_dashboard/roles/route'
import { Route as AuthenticatedDashboardUsersIndexRouteImport } from './routes/_authenticated/_dashboard/users/index'
import { Route as AuthenticatedDashboardRolesIndexRouteImport } from './routes/_authenticated/_dashboard/roles/index'
import { Route as AuthenticatedDashboardRolesNameRouteRouteImport } from './routes/_authenticated/_dashboard/roles/$name/route'
import { Route as AuthenticatedDashboardRolesNameIndexRouteImport } from './routes/_authenticated/_dashboard/roles/$name/index'
import { Route as AuthenticatedDashboardRolesNamePermissionsRouteImport } from './routes/_authenticated/_dashboard/roles/$name/permissions'
import { Route as AuthenticatedDashboardRolesNameMembersRouteImport } from './routes/_authenticated/_dashboard/roles/$name/members'

const AuthenticationRouteRoute = AuthenticationRouteRouteImport.update({
  id: '/_authentication',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedDashboardRouteRoute =
  AuthenticatedDashboardRouteRouteImport.update({
    id: '/_dashboard',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticationRegisterIndexRoute =
  AuthenticationRegisterIndexRouteImport.update({
    id: '/register/',
    path: '/register/',
    getParentRoute: () => AuthenticationRouteRoute,
  } as any)
const AuthenticationLoginIndexRoute =
  AuthenticationLoginIndexRouteImport.update({
    id: '/login/',
    path: '/login/',
    getParentRoute: () => AuthenticationRouteRoute,
  } as any)
const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)
const AuthenticatedDashboardProfileRoute =
  AuthenticatedDashboardProfileRouteImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)
const AuthenticatedDashboardUsersRouteRoute =
  AuthenticatedDashboardUsersRouteRouteImport.update({
    id: '/users',
    path: '/users',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)
const AuthenticatedDashboardRolesRouteRoute =
  AuthenticatedDashboardRolesRouteRouteImport.update({
    id: '/roles',
    path: '/roles',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)
const AuthenticatedDashboardUsersIndexRoute =
  AuthenticatedDashboardUsersIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedDashboardUsersRouteRoute,
  } as any)
const AuthenticatedDashboardRolesIndexRoute =
  AuthenticatedDashboardRolesIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedDashboardRolesRouteRoute,
  } as any)
const AuthenticatedDashboardRolesNameRouteRoute =
  AuthenticatedDashboardRolesNameRouteRouteImport.update({
    id: '/$name',
    path: '/$name',
    getParentRoute: () => AuthenticatedDashboardRolesRouteRoute,
  } as any)
const AuthenticatedDashboardRolesNameIndexRoute =
  AuthenticatedDashboardRolesNameIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedDashboardRolesNameRouteRoute,
  } as any)
const AuthenticatedDashboardRolesNamePermissionsRoute =
  AuthenticatedDashboardRolesNamePermissionsRouteImport.update({
    id: '/permissions',
    path: '/permissions',
    getParentRoute: () => AuthenticatedDashboardRolesNameRouteRoute,
  } as any)
const AuthenticatedDashboardRolesNameMembersRoute =
  AuthenticatedDashboardRolesNameMembersRouteImport.update({
    id: '/members',
    path: '/members',
    getParentRoute: () => AuthenticatedDashboardRolesNameRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/roles': typeof AuthenticatedDashboardRolesRouteRouteWithChildren
  '/users': typeof AuthenticatedDashboardUsersRouteRouteWithChildren
  '/profile': typeof AuthenticatedDashboardProfileRoute
  '/': typeof AuthenticatedDashboardIndexRoute
  '/login': typeof AuthenticationLoginIndexRoute
  '/register': typeof AuthenticationRegisterIndexRoute
  '/roles/$name': typeof AuthenticatedDashboardRolesNameRouteRouteWithChildren
  '/roles/': typeof AuthenticatedDashboardRolesIndexRoute
  '/users/': typeof AuthenticatedDashboardUsersIndexRoute
  '/roles/$name/members': typeof AuthenticatedDashboardRolesNameMembersRoute
  '/roles/$name/permissions': typeof AuthenticatedDashboardRolesNamePermissionsRoute
  '/roles/$name/': typeof AuthenticatedDashboardRolesNameIndexRoute
}
export interface FileRoutesByTo {
  '/profile': typeof AuthenticatedDashboardProfileRoute
  '/': typeof AuthenticatedDashboardIndexRoute
  '/login': typeof AuthenticationLoginIndexRoute
  '/register': typeof AuthenticationRegisterIndexRoute
  '/roles': typeof AuthenticatedDashboardRolesIndexRoute
  '/users': typeof AuthenticatedDashboardUsersIndexRoute
  '/roles/$name/members': typeof AuthenticatedDashboardRolesNameMembersRoute
  '/roles/$name/permissions': typeof AuthenticatedDashboardRolesNamePermissionsRoute
  '/roles/$name': typeof AuthenticatedDashboardRolesNameIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authentication': typeof AuthenticationRouteRouteWithChildren
  '/_authenticated/_dashboard': typeof AuthenticatedDashboardRouteRouteWithChildren
  '/_authenticated/_dashboard/roles': typeof AuthenticatedDashboardRolesRouteRouteWithChildren
  '/_authenticated/_dashboard/users': typeof AuthenticatedDashboardUsersRouteRouteWithChildren
  '/_authenticated/_dashboard/profile': typeof AuthenticatedDashboardProfileRoute
  '/_authenticated/_dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/_authentication/login/': typeof AuthenticationLoginIndexRoute
  '/_authentication/register/': typeof AuthenticationRegisterIndexRoute
  '/_authenticated/_dashboard/roles/$name': typeof AuthenticatedDashboardRolesNameRouteRouteWithChildren
  '/_authenticated/_dashboard/roles/': typeof AuthenticatedDashboardRolesIndexRoute
  '/_authenticated/_dashboard/users/': typeof AuthenticatedDashboardUsersIndexRoute
  '/_authenticated/_dashboard/roles/$name/members': typeof AuthenticatedDashboardRolesNameMembersRoute
  '/_authenticated/_dashboard/roles/$name/permissions': typeof AuthenticatedDashboardRolesNamePermissionsRoute
  '/_authenticated/_dashboard/roles/$name/': typeof AuthenticatedDashboardRolesNameIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/roles'
    | '/users'
    | '/profile'
    | '/'
    | '/login'
    | '/register'
    | '/roles/$name'
    | '/roles/'
    | '/users/'
    | '/roles/$name/members'
    | '/roles/$name/permissions'
    | '/roles/$name/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/profile'
    | '/'
    | '/login'
    | '/register'
    | '/roles'
    | '/users'
    | '/roles/$name/members'
    | '/roles/$name/permissions'
    | '/roles/$name'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authentication'
    | '/_authenticated/_dashboard'
    | '/_authenticated/_dashboard/roles'
    | '/_authenticated/_dashboard/users'
    | '/_authenticated/_dashboard/profile'
    | '/_authenticated/_dashboard/'
    | '/_authentication/login/'
    | '/_authentication/register/'
    | '/_authenticated/_dashboard/roles/$name'
    | '/_authenticated/_dashboard/roles/'
    | '/_authenticated/_dashboard/users/'
    | '/_authenticated/_dashboard/roles/$name/members'
    | '/_authenticated/_dashboard/roles/$name/permissions'
    | '/_authenticated/_dashboard/roles/$name/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  AuthenticationRouteRoute: typeof AuthenticationRouteRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authentication': {
      id: '/_authentication'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticationRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/_dashboard': {
      id: '/_authenticated/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedDashboardRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authentication/register/': {
      id: '/_authentication/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthenticationRegisterIndexRouteImport
      parentRoute: typeof AuthenticationRouteRoute
    }
    '/_authentication/login/': {
      id: '/_authentication/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthenticationLoginIndexRouteImport
      parentRoute: typeof AuthenticationRouteRoute
    }
    '/_authenticated/_dashboard/': {
      id: '/_authenticated/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedDashboardIndexRouteImport
      parentRoute: typeof AuthenticatedDashboardRouteRoute
    }
    '/_authenticated/_dashboard/profile': {
      id: '/_authenticated/_dashboard/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedDashboardProfileRouteImport
      parentRoute: typeof AuthenticatedDashboardRouteRoute
    }
    '/_authenticated/_dashboard/users': {
      id: '/_authenticated/_dashboard/users'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedDashboardUsersRouteRouteImport
      parentRoute: typeof AuthenticatedDashboardRouteRoute
    }
    '/_authenticated/_dashboard/roles': {
      id: '/_authenticated/_dashboard/roles'
      path: '/roles'
      fullPath: '/roles'
      preLoaderRoute: typeof AuthenticatedDashboardRolesRouteRouteImport
      parentRoute: typeof AuthenticatedDashboardRouteRoute
    }
    '/_authenticated/_dashboard/users/': {
      id: '/_authenticated/_dashboard/users/'
      path: '/'
      fullPath: '/users/'
      preLoaderRoute: typeof AuthenticatedDashboardUsersIndexRouteImport
      parentRoute: typeof AuthenticatedDashboardUsersRouteRoute
    }
    '/_authenticated/_dashboard/roles/': {
      id: '/_authenticated/_dashboard/roles/'
      path: '/'
      fullPath: '/roles/'
      preLoaderRoute: typeof AuthenticatedDashboardRolesIndexRouteImport
      parentRoute: typeof AuthenticatedDashboardRolesRouteRoute
    }
    '/_authenticated/_dashboard/roles/$name': {
      id: '/_authenticated/_dashboard/roles/$name'
      path: '/$name'
      fullPath: '/roles/$name'
      preLoaderRoute: typeof AuthenticatedDashboardRolesNameRouteRouteImport
      parentRoute: typeof AuthenticatedDashboardRolesRouteRoute
    }
    '/_authenticated/_dashboard/roles/$name/': {
      id: '/_authenticated/_dashboard/roles/$name/'
      path: '/'
      fullPath: '/roles/$name/'
      preLoaderRoute: typeof AuthenticatedDashboardRolesNameIndexRouteImport
      parentRoute: typeof AuthenticatedDashboardRolesNameRouteRoute
    }
    '/_authenticated/_dashboard/roles/$name/permissions': {
      id: '/_authenticated/_dashboard/roles/$name/permissions'
      path: '/permissions'
      fullPath: '/roles/$name/permissions'
      preLoaderRoute: typeof AuthenticatedDashboardRolesNamePermissionsRouteImport
      parentRoute: typeof AuthenticatedDashboardRolesNameRouteRoute
    }
    '/_authenticated/_dashboard/roles/$name/members': {
      id: '/_authenticated/_dashboard/roles/$name/members'
      path: '/members'
      fullPath: '/roles/$name/members'
      preLoaderRoute: typeof AuthenticatedDashboardRolesNameMembersRouteImport
      parentRoute: typeof AuthenticatedDashboardRolesNameRouteRoute
    }
  }
}

interface AuthenticatedDashboardRolesNameRouteRouteChildren {
  AuthenticatedDashboardRolesNameMembersRoute: typeof AuthenticatedDashboardRolesNameMembersRoute
  AuthenticatedDashboardRolesNamePermissionsRoute: typeof AuthenticatedDashboardRolesNamePermissionsRoute
  AuthenticatedDashboardRolesNameIndexRoute: typeof AuthenticatedDashboardRolesNameIndexRoute
}

const AuthenticatedDashboardRolesNameRouteRouteChildren: AuthenticatedDashboardRolesNameRouteRouteChildren =
  {
    AuthenticatedDashboardRolesNameMembersRoute:
      AuthenticatedDashboardRolesNameMembersRoute,
    AuthenticatedDashboardRolesNamePermissionsRoute:
      AuthenticatedDashboardRolesNamePermissionsRoute,
    AuthenticatedDashboardRolesNameIndexRoute:
      AuthenticatedDashboardRolesNameIndexRoute,
  }

const AuthenticatedDashboardRolesNameRouteRouteWithChildren =
  AuthenticatedDashboardRolesNameRouteRoute._addFileChildren(
    AuthenticatedDashboardRolesNameRouteRouteChildren,
  )

interface AuthenticatedDashboardRolesRouteRouteChildren {
  AuthenticatedDashboardRolesNameRouteRoute: typeof AuthenticatedDashboardRolesNameRouteRouteWithChildren
  AuthenticatedDashboardRolesIndexRoute: typeof AuthenticatedDashboardRolesIndexRoute
}

const AuthenticatedDashboardRolesRouteRouteChildren: AuthenticatedDashboardRolesRouteRouteChildren =
  {
    AuthenticatedDashboardRolesNameRouteRoute:
      AuthenticatedDashboardRolesNameRouteRouteWithChildren,
    AuthenticatedDashboardRolesIndexRoute:
      AuthenticatedDashboardRolesIndexRoute,
  }

const AuthenticatedDashboardRolesRouteRouteWithChildren =
  AuthenticatedDashboardRolesRouteRoute._addFileChildren(
    AuthenticatedDashboardRolesRouteRouteChildren,
  )

interface AuthenticatedDashboardUsersRouteRouteChildren {
  AuthenticatedDashboardUsersIndexRoute: typeof AuthenticatedDashboardUsersIndexRoute
}

const AuthenticatedDashboardUsersRouteRouteChildren: AuthenticatedDashboardUsersRouteRouteChildren =
  {
    AuthenticatedDashboardUsersIndexRoute:
      AuthenticatedDashboardUsersIndexRoute,
  }

const AuthenticatedDashboardUsersRouteRouteWithChildren =
  AuthenticatedDashboardUsersRouteRoute._addFileChildren(
    AuthenticatedDashboardUsersRouteRouteChildren,
  )

interface AuthenticatedDashboardRouteRouteChildren {
  AuthenticatedDashboardRolesRouteRoute: typeof AuthenticatedDashboardRolesRouteRouteWithChildren
  AuthenticatedDashboardUsersRouteRoute: typeof AuthenticatedDashboardUsersRouteRouteWithChildren
  AuthenticatedDashboardProfileRoute: typeof AuthenticatedDashboardProfileRoute
  AuthenticatedDashboardIndexRoute: typeof AuthenticatedDashboardIndexRoute
}

const AuthenticatedDashboardRouteRouteChildren: AuthenticatedDashboardRouteRouteChildren =
  {
    AuthenticatedDashboardRolesRouteRoute:
      AuthenticatedDashboardRolesRouteRouteWithChildren,
    AuthenticatedDashboardUsersRouteRoute:
      AuthenticatedDashboardUsersRouteRouteWithChildren,
    AuthenticatedDashboardProfileRoute: AuthenticatedDashboardProfileRoute,
    AuthenticatedDashboardIndexRoute: AuthenticatedDashboardIndexRoute,
  }

const AuthenticatedDashboardRouteRouteWithChildren =
  AuthenticatedDashboardRouteRoute._addFileChildren(
    AuthenticatedDashboardRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedDashboardRouteRoute: typeof AuthenticatedDashboardRouteRouteWithChildren
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedDashboardRouteRoute:
    AuthenticatedDashboardRouteRouteWithChildren,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

interface AuthenticationRouteRouteChildren {
  AuthenticationLoginIndexRoute: typeof AuthenticationLoginIndexRoute
  AuthenticationRegisterIndexRoute: typeof AuthenticationRegisterIndexRoute
}

const AuthenticationRouteRouteChildren: AuthenticationRouteRouteChildren = {
  AuthenticationLoginIndexRoute: AuthenticationLoginIndexRoute,
  AuthenticationRegisterIndexRoute: AuthenticationRegisterIndexRoute,
}

const AuthenticationRouteRouteWithChildren =
  AuthenticationRouteRoute._addFileChildren(AuthenticationRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  AuthenticationRouteRoute: AuthenticationRouteRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
