/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as VerifyIndexRouteImport } from './routes/verify/index'
import { Route as RegisterIndexRouteImport } from './routes/register/index'
import { Route as LoginIndexRouteImport } from './routes/_login/index'

const VerifyIndexRoute = VerifyIndexRouteImport.update({
  id: '/verify/',
  path: '/verify/',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterIndexRoute = RegisterIndexRouteImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/_login/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof LoginIndexRoute
  '/register': typeof RegisterIndexRoute
  '/verify': typeof VerifyIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof LoginIndexRoute
  '/register': typeof RegisterIndexRoute
  '/verify': typeof VerifyIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_login/': typeof LoginIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/verify/': typeof VerifyIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/register' | '/verify'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/register' | '/verify'
  id: '__root__' | '/_login/' | '/register/' | '/verify/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  LoginIndexRoute: typeof LoginIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
  VerifyIndexRoute: typeof VerifyIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/verify/': {
      id: '/verify/'
      path: '/verify'
      fullPath: '/verify'
      preLoaderRoute: typeof VerifyIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_login/': {
      id: '/_login/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  LoginIndexRoute: LoginIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
  VerifyIndexRoute: VerifyIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
